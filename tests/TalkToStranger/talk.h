/*** Autogenerated by WIDL 1.1.6 from talk.idl - Do not edit ***/
#include <rpc.h>
#include <rpcndr.h>

#ifndef __WIDL_TALK_H
#define __WIDL_TALK_H
#ifdef __cplusplus
extern "C" {
#endif

#include <objidl.h>
#ifndef __ITalkSessionEvents_FWD_DEFINED__
#define __ITalkSessionEvents_FWD_DEFINED__
typedef interface ITalkSessionEvents ITalkSessionEvents;
#endif

#ifndef __ITalkSession_FWD_DEFINED__
#define __ITalkSession_FWD_DEFINED__
typedef interface ITalkSession ITalkSession;
#endif

/*****************************************************************************
 * ITalkSession interface
 */
#ifndef __ITalkSession_INTERFACE_DEFINED__
#define __ITalkSession_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITalkSession, 0xa7ccbb08, 0x7d0b, 0x4318, 0xba,0xe6, 0x4b,0xcc,0x8a,0xb3,0x0c,0xa7);
#if defined(__cplusplus) && !defined(CINTERFACE)
interface ITalkSession : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE Say(
        const OLECHAR *pwszStatement) = 0;

    virtual HRESULT STDMETHODCALLTYPE Advise(
        ITalkSessionEvents *pEventSink,
        DWORD *pdwReg) = 0;

    virtual HRESULT STDMETHODCALLTYPE Unadvise(
        DWORD dwReg) = 0;

};
#else
typedef struct ITalkSessionVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITalkSession* This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITalkSession* This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITalkSession* This);

    /*** ITalkSession methods ***/
    HRESULT (STDMETHODCALLTYPE *Say)(
        ITalkSession* This,
        const OLECHAR *pwszStatement);

    HRESULT (STDMETHODCALLTYPE *Advise)(
        ITalkSession* This,
        ITalkSessionEvents *pEventSink,
        DWORD *pdwReg);

    HRESULT (STDMETHODCALLTYPE *Unadvise)(
        ITalkSession* This,
        DWORD dwReg);

    END_INTERFACE
} ITalkSessionVtbl;
interface ITalkSession {
    CONST_VTBL ITalkSessionVtbl* lpVtbl;
};

#ifdef COBJMACROS
/*** IUnknown methods ***/
#define ITalkSession_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITalkSession_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITalkSession_Release(This) (This)->lpVtbl->Release(This)
/*** ITalkSession methods ***/
#define ITalkSession_Say(This,pwszStatement) (This)->lpVtbl->Say(This,pwszStatement)
#define ITalkSession_Advise(This,pEventSink,pdwReg) (This)->lpVtbl->Advise(This,pEventSink,pdwReg)
#define ITalkSession_Unadvise(This,dwReg) (This)->lpVtbl->Unadvise(This,dwReg)
#endif

#endif

HRESULT STDMETHODCALLTYPE ITalkSession_Say_Proxy(
    ITalkSession* This,
    const OLECHAR *pwszStatement);
void __RPC_STUB ITalkSession_Say_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITalkSession_Advise_Proxy(
    ITalkSession* This,
    ITalkSessionEvents *pEventSink,
    DWORD *pdwReg);
void __RPC_STUB ITalkSession_Advise_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);
HRESULT STDMETHODCALLTYPE ITalkSession_Unadvise_Proxy(
    ITalkSession* This,
    DWORD dwReg);
void __RPC_STUB ITalkSession_Unadvise_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __ITalkSession_INTERFACE_DEFINED__ */

/*****************************************************************************
 * ITalkSessionEvents interface
 */
#ifndef __ITalkSessionEvents_INTERFACE_DEFINED__
#define __ITalkSessionEvents_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITalkSessionEvents, 0xa7ccbb09, 0x7d0b, 0x4318, 0xba,0xe6, 0x4b,0xcc,0x8a,0xb3,0x0c,0xa7);
#if defined(__cplusplus) && !defined(CINTERFACE)
interface ITalkSessionEvents : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE OnStatement(
        const OLECHAR *pwszUser,
        const OLECHAR *pwszStmnt) = 0;

};
#else
typedef struct ITalkSessionEventsVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITalkSessionEvents* This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITalkSessionEvents* This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITalkSessionEvents* This);

    /*** ITalkSessionEvents methods ***/
    HRESULT (STDMETHODCALLTYPE *OnStatement)(
        ITalkSessionEvents* This,
        const OLECHAR *pwszUser,
        const OLECHAR *pwszStmnt);

    END_INTERFACE
} ITalkSessionEventsVtbl;
interface ITalkSessionEvents {
    CONST_VTBL ITalkSessionEventsVtbl* lpVtbl;
};

#ifdef COBJMACROS
/*** IUnknown methods ***/
#define ITalkSessionEvents_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITalkSessionEvents_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITalkSessionEvents_Release(This) (This)->lpVtbl->Release(This)
/*** ITalkSessionEvents methods ***/
#define ITalkSessionEvents_OnStatement(This,pwszUser,pwszStmnt) (This)->lpVtbl->OnStatement(This,pwszUser,pwszStmnt)
#endif

#endif

HRESULT STDMETHODCALLTYPE ITalkSessionEvents_OnStatement_Proxy(
    ITalkSessionEvents* This,
    const OLECHAR *pwszUser,
    const OLECHAR *pwszStmnt);
void __RPC_STUB ITalkSessionEvents_OnStatement_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __ITalkSessionEvents_INTERFACE_DEFINED__ */

#ifndef __ITalkSessionManager_FWD_DEFINED__
#define __ITalkSessionManager_FWD_DEFINED__
typedef interface ITalkSessionManager ITalkSessionManager;
#endif

/*****************************************************************************
 * ITalkSessionManager interface
 */
#ifndef __ITalkSessionManager_INTERFACE_DEFINED__
#define __ITalkSessionManager_INTERFACE_DEFINED__

DEFINE_GUID(IID_ITalkSessionManager, 0xa7ccbb0a, 0x7d0b, 0x4318, 0xba,0xe6, 0x4b,0xcc,0x8a,0xb3,0x0c,0xa7);
#if defined(__cplusplus) && !defined(CINTERFACE)
interface ITalkSessionManager : public IUnknown
{
    virtual HRESULT STDMETHODCALLTYPE CreateSession(
        ITalkSession **ppts) = 0;

};
#else
typedef struct ITalkSessionManagerVtbl {
    BEGIN_INTERFACE

    /*** IUnknown methods ***/
    HRESULT (STDMETHODCALLTYPE *QueryInterface)(
        ITalkSessionManager* This,
        REFIID riid,
        void **ppvObject);

    ULONG (STDMETHODCALLTYPE *AddRef)(
        ITalkSessionManager* This);

    ULONG (STDMETHODCALLTYPE *Release)(
        ITalkSessionManager* This);

    /*** ITalkSessionManager methods ***/
    HRESULT (STDMETHODCALLTYPE *CreateSession)(
        ITalkSessionManager* This,
        ITalkSession **ppts);

    END_INTERFACE
} ITalkSessionManagerVtbl;
interface ITalkSessionManager {
    CONST_VTBL ITalkSessionManagerVtbl* lpVtbl;
};

#ifdef COBJMACROS
/*** IUnknown methods ***/
#define ITalkSessionManager_QueryInterface(This,riid,ppvObject) (This)->lpVtbl->QueryInterface(This,riid,ppvObject)
#define ITalkSessionManager_AddRef(This) (This)->lpVtbl->AddRef(This)
#define ITalkSessionManager_Release(This) (This)->lpVtbl->Release(This)
/*** ITalkSessionManager methods ***/
#define ITalkSessionManager_CreateSession(This,ppts) (This)->lpVtbl->CreateSession(This,ppts)
#endif

#endif

HRESULT STDMETHODCALLTYPE ITalkSessionManager_CreateSession_Proxy(
    ITalkSessionManager* This,
    ITalkSession **ppts);
void __RPC_STUB ITalkSessionManager_CreateSession_Stub(
    IRpcStubBuffer* This,
    IRpcChannelBuffer* pRpcChannelBuffer,
    PRPC_MESSAGE pRpcMessage,
    DWORD* pdwStubPhase);

#endif  /* __ITalkSessionManager_INTERFACE_DEFINED__ */

/*****************************************************************************
 * TalkToStranger coclass
 */

DEFINE_GUID(CLSID_TalkToStranger, 0xa7ccbb0f, 0x7d0b, 0x4318, 0xba,0xe6, 0x4b,0xcc,0x8a,0xb3,0x0c,0xa7);

#ifndef __TalkToStranger_FWD_DEFINED__
#define __TalkToStranger_FWD_DEFINED__
typedef struct TalkToStranger TalkToStranger;
#endif /* defined __TalkToStranger_FWD_DEFINED__ */

/* Begin additional prototypes for all interfaces */


/* End additional prototypes */

#ifdef __cplusplus
}
#endif

#endif /* __WIDL_TALK_H */
